fs = require \fs
coco = require \coco
stylus = require \stylus
_ = require \underscore

ls = -> # appends relative path to readdir paths, and skip .swp files
	"#it/#file" unless /.swp$/.test file for file of fs.readdirSync it
join = -> Array::join.call @@ \\n
read = -> fs.readFileSync it, \utf8
compile = -> coco.compile it, bare: true
check = -> # make sure scripts can compile before joining
	try
		script if compile (script = read it)
	catch e
		throw new Error "Error compiling #it:\n\t#e"

check_and_join = -> 
	join.apply null, (check name for name of it) 

outfile = \html5chan@httpsgithubcomqueue-html5chan.user.js
metadata = read \metadata.txt

task \build 'build userscript' ->
	stylus.render read(\css/hakase.styl), (err,css) -> # stupid async API
		try
			throw err if err
			fs.writeFileSync do
				outfile
				join do
					metadata
					compile join do 
						check \src/intro.co
						check \src/utils.co
						check_and_join ls \src/classes
						check \src/parser.co
						check \src/renderer.co .replace /%hakase\.css%/ css 
						check_and_join ls \src/features
						check \src/outro.co
			console.log "compiled script to #{outfile}"
		catch e
			console.error e
				
task \watch 'watch for changes and rebuild automatically' ->
	invoke \build
	<[css src]>.forEach ->
		fs.watch it, interval: 1000, _.debounce do
			(event, filename) ->
				unless /.swp$/.test filename # goddamn vi
					console.log "#event event detected on #filename. rebuilding..."
					invoke \build
			1000
