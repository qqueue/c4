# rainbow tripcodes
# because I can
rainbowize = do ->
	color = -> # generate colored hash
		hue = (((c.charCodeAt(0) for c of it).reduce((x,y) -> x + y)) * 3413 ) % 360
		hue += 180 if Math.abs(hue - 231) < 15 # avoid close colors to standard blue
		"hsl(#hue, 36%, 89%)" # lightness and saturation of original yotsuba
	escape = -> #css escape classnames
		it.replace /[!+\/\.]/g '\\$&' .replace /^\d/ '\\3$& '
	->
		time "rainbow tripcodes and uids"
		$ \#rainbowtripcodes .remove!
		$ \#rainbowuids .remove!

		$ '<style>', id: 'rainbowtripcodes'
			.text do
				(for tripcode in Post.tripcodes
					".tripcoded.#{escape tripcode}:not(.op) { background-color: #{color(tripcode)}; }"
				).join("\n")
			.appendTo 'head'
		$ '<style>', id: 'rainbowuids'
			.text do
				(for uid in Post.uids
					".uid.#{escape uid} { background-color: #{color(uid)}; }"
				).join("\n")
			.appendTo 'head'
		timeEnd "rainbow tripcodes and uids"

rainbowize!
