# fake ajax posting
# TODO move this outside feature scope
# since it also involves the message handler in onready,
# which is pretty much immoble

postStatus = ->
	document.getElementById \post-status .textContent = it

features.ajaxpost =
	on: ->
		document.body.appendChild create \iframe ->
			@id = \postresponse
			@name = \postresponse
			@hidden = true

		document.getElementById \postform .target = \postresponse
		
		remove document.getElementById \noko # useless with fake ajax posting

		listen document.getElementById \buttons
			.on \click (e) ->
				captcha = document.getElementById \recaptcha_response_field
				file = document.getElementById \file
				comment = document.getElementById \comment

				captcha.setCustomValidity unless captcha.value
					"You forgot the captcha!"
				else ''
				
				file.setCustomValidity if !file.value and board.isBoard
					"You forgot your image!"
				else ''

				comment.setCustomValidity if !file.value and !comment.value
					"You didn't enter a comment or select a file!"
				else ''

		# the hidden iframe where the form submits to
		# dumps its body back through postMessage
		# which we can then parse here to determine the status of the post
		# 
		# this is similar to the approach 4chanx takes, but instead of 
		# trying to pass all the formdata through postMessage, and
		# have the iframe make the xhr for us, we just fake 
		# a no-reload response by having the userscript also load on
		# the sys.4chan.org result page and have it send us the response.
		#
		# Unfortunately this means we cant get progress events, so no fancy
		# upload progress bar ;_;
		listen window .on \message ({data}) ->
			html = create \div -> @innerHTML = data # reparse innerHTML
			console.log html

			captcha = document.getElementById \recaptcha_response_field
			file = document.getElementById \file
			comment = document.getElementById \comment

			if /Post successful!|uploaded!/.test html.textContent
				postStatus 'Post successful!'
				# update and show new post, giving some time for 4chan to process it
				setTimeout updater.update, 1000
			
				captcha.value = ''
				# TODO figure out better way to reset captcha field
				document.getElementById \recaptcha_reload_btn .click!

				comment.value = ''

				# through the value of a file input is always '', you can still reset
				# the field by re-setting it to ''
				file.value = ''


			# TODO check for other errors
			else if /mistyped the verification/.test html.textContent
				postStatus 'You mistyped the verification!' 
				document.getElementById \recaptcha_reload_btn .click!
				captcha.value = ''
				captcha.focus!

	off: ->

