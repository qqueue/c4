# embed youtube links on click
embed = (e) ->
	unless e.altKey or e.ctrlKey or e.shiftKey or e.metaKey
		@outerHTML = 
			"""<iframe width="560" height="315" src="http://www.youtube-nocookie.com/embed/#{@dataset.id}#{if @dataset.params then "?#that" else \?}&amp;autoplay=1" frameborder="0" allowfullscreen></iframe>"""
		return false

fetch_link = ->
	link = this # called as event handler
	unless @title # this prevents multiple xhrs from being created
		@title = 'Loading video title... (re-mouse over preview to refresh)'
		with new XMLHttpRequest
			@open \get "https://gdata.youtube.com/feeds/api/videos/#{link.dataset.id}?v=2&alt=json" 
			# fucking chrome and its problems with supporting html5
			# @responseType = \json
			listen this
				.on \load -> link.title = JSON.parse @responseText .entry.title.\$t
				.on \error -> link.title = "Youtube [#{link.dataset.id}]"
				.on \loadend -> listen link .off \mouseenter fetch_link
			@send!

# grab titles for youtube vids with api
load_titles = ->
	for link of document.querySelectorAll \a.youtube
		unless link.title # skip adding new listener to already fetched vids
			listen link .on \mouseenter fetch_link

features.youtube =
	on: ->
		listen document.getElementById \threads
			.on \click \a.youtube embed

		load_titles!
		updater.after_update load_titles # grab new video titles

	off: ->
		listen document.getElementById \threads
			.off \click embed
