# youtube embedding and title fetching

const api-key = "AIzaSyCe5gXUv-EFyNMoESO8ONZnottbsd-2ayA"
const batch-size = 30
const rate = 5000ms

request-queue = []
queue = (req) !->
  req.addEventListener \loadend !->
    defer rate, !->
      if request-queue.shift!
        that.send!
  request-queue.push req
  if request-queue.length is 1
    req.send!

# video information cache
cache = {}

<-! onready

# initial fetch

to-fetch = {}

for vid of $$ \.youtube
  to-fetch[vid.dataset.id] = true

batches = []
batch = []
for id in to-fetch
  batch.push id
  if batch.length > batch-size
    batches.push batch.join \,
    batch = []
console.log batches

if batch.length > 0
  for b of batches
    let req = new XMLHttpRequest
      req.open \GET "https://www.googleapis.com/youtube/v3/videos
                  ?id=#{encodeURIComponent b}
                  &part=snippet%2C+statistics
                  &fields=items(id%2Csnippet%2Cstatistics)
                  &key=#{api-key}"
      req.addEventListener \load !->
        data = JSON.parse @response
        console.log data
        for v of data.items
          cache[v.id] = v

          for vid of $$ ".youtube[data-id=\"#{v.id}\"]"
            vid.title = "#{v.title}
                         \n\n
                         #{v.statistics.viewCount} views.
                           \n\n
                         #{truncate v.snippet.description, 200}"
      req.addEventListener \error !->
        console.error "what happen" this

      queue req

# TODO onupdate





# embed iframes
# TODO add close button somehow
delegate.click \a.youtube !(e) ->
  unless e.altKey or e.ctrlKey or e.shiftKey or e.metaKey
    e.preventDefault!
    @replace kup do
      \iframe
      width: 560
      height: 315
      src: "//www.youtube.com/embed/#{@dataset.id}
            ?#{@dataset.params or ''}
            &amp;autoplay=1
            &amp;wmode=transparent"
      frameborder: 0
      allowfullscreen: ''

