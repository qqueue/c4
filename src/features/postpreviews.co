# post hover previews

{on-posts, onbacklink} = require \../utils/features
{defer} = require \../utils/timing
{DOM, $$, $, closest, classify} = require \../utils/dom
parser = require \../parser
post-template = require \templates/post
listen = require \../utils/listen

# XXX also will break weirdly if there is a cross-board link to a board with
# similar post numbers.  IDs will start to be overwritten since there are only
# unique within a board.
fetch-new-post = !(no) ->
  [, board-name, , thread] = @pathname.split \/ # /<board>/res/<thread>

  link = this
  @style.cursor = \progress

  # TODO guard against multiple requests in short time period
  xhr = new XMLHttpRequest
    &open \GET "//api.4chan.org/#board-name/res/#thread.json"
    &onload = !->
      # TODO handle 404 -> archive
      if @status is 200
        thread = parser.api JSON.parse @response

        if still-hovered
          link.style.removeProperty \cursor

          # update board.posts has
          for thread.posts
            board.posts[&no] = &

          # then use that to look up our post
          create-preview.call link, no, board.posts[no]

    &send!

  still-hovered = true

  @addEventListener \mouseout function out
    still-hovered := false
    @style.removeProperty \cursor
    @removeEventListener \mouseout out

handle-preview = !->
  return if @classList.contains \inlinedlink \
         or @classList.contains \recursivelink

  no = @hash.substring 2 # "#p"

  if not post = board.posts[no]
    fetch-new-post.call this, no
  else
    create-preview.call this, no, post

create-preview = !(no, post) ->
  $ \postpreview ?.remove!

  host = closest \.post this
  hostid = (host.id / \-)pop!

  {width, height, left, top} = @getBoundingClientRect!

  preview = DOM post-template post, container: \article, classes: \postpreview
    document.dispatchEvent new CustomEvent do
      \html5chan-postinsert
      detail: post: preview

    for &querySelectorAll ".quotelink[href$=\"#hostid\"]"
      &className = \recursivelink
      &removeAttribute \href

    # remove unecessary first quote XXX copypasta from inlinereplies
    &querySelector \.comment
      if &querySelectorAll \.quotelink .length is 0
        &firstElementChild
          if &?className is \recursivelink
            # clear out redundant space
            while &nextSibling?tagName is \BR \
               or &nextSibling?classList?contains \forcedquote \
               or &nextSibling?classList?contains \forcedimage
              &nextSibling.remove!
            &remove!

    &style
      &position = \fixed
      if left > (docWidth = document.documentElement.clientWidth) / 2
        &right = "#{docWidth - left - width}px"
      else
        &left = "#{left}px"

      if @classList.contains \backlink
        &top = "#{top + height + 5}px"
      else
        &bottom = "#{window.innerHeight - top + 5}px"

    document.body.appendChild (&)

  # highlight hovered replies
  classify $$ ".post[data-no=\"#no\"]" .add \hovered

  listen this .once \mouseout !->
    preview.remove!
    classify $$ ".post[data-no=\"#no\"]" .remove \hovered

on-posts \.quotelink : mouseover: handle-preview

onbacklink !->
  it.detail.backlink.addEventListener \mouseover handle-preview

