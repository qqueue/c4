# show a centered image preview when hovering over an image after a short
# delay, and only remove it after the mouse moves out of the dead zone this is
# similar to how tooltips are handled in firefox.
const delay     = 200ms
const dead-zone = 10px

export handle-preview = !({clientX: x, clientY: y}) ->
  {width, height} = @parentElement.dataset
  src = @parentElement.href

  $ \imgpreview ?.remove!

  # http://code.google.com/p/doctype-mirror/wiki/ArticleViewportSize
  # size of viewport excluding scrollbars
  docheight = document.documentElement.clientHeight - 20
  docwidth  = document.documentElement.clientWidth - 20

  ratio = Math.min 1, docheight/height, docwidth/width
  width  *= ratio
  height *= ratio

  var timeout
  # until the image is displayed, continually reset
  # timeout on mousemovement
  reset-image = !(e) ->
    clearTimeout timeout
    timeout := setTimeout create-image, delay

    # store the new current mouse position
    x := e.clientX
    y := e.clientY

  var full
  create-image = !~>
    full ||:= document.createElement \img
      &id = \imgpreview
      &alt = "Loading..."
      & <<< {src, width, height}

      &addEventListener \load  -> @removeAttribute \alt
      &addEventListener \error -> @alt = "Unable to load image."

      &style <<<
        position: \fixed
        left: 0
        top: 0
        pointer-events: \none
        padding: "#{10 + (docheight - height) / 2}px \
                  #{10 + (docwidth  - width ) / 2}px"
        background-color: 'rgba(0,0,0,.5)'
        transition-duration: \.5s
        opacity: 0

      # remove once faded
      &addEventListener \transitionend ({propertyName}: e) ->
        if propertyName is \opacity and @style.opacity is '0'
          @remove!

    document.body.appendChild full

    # fade in, deferred to trigger transition
    defer 100ms !-> full?style.opacity = 1

    @classList.add \hovered-img

    # swap creation with destruction
    listen this
      .off \mousemove reset-image
      .on \mousemove remove-image

  remove-image = !({clientX: cx, clientY: cy}) ->
    if Math.abs(x - cx) > dead-zone or Math.abs(y - cy) > dead-zone
      @classList.remove \hovered-img

      full?style.opacity = 0

      # restart tooltip timeout
      timeout := setTimeout create-image, delay
      listen this
        .on \mousemove reset-image
        .off \mousemove remove-image

  # start initial timeout
  timeout = setTimeout create-image, delay

  # add handlers
  listen this
    .on \mousemove reset-image
    .once \mouseout !->
      full?style.opacity = 0

      # make sure the image removes itself
      defer 100ms !-> full?remove!

      clearTimeout timeout # stop image from appearing
      listen this
        .off \mousemove reset-image
        .off \mousemove remove-image

onready !->
  console.time 'attach thumb hover listeners'
  for $$ \.thumb => &addEventListener \mouseover handle-preview
  console.timeEnd 'attach thumb hover listeners'

onpostinsert !->
  it.detail.post.querySelector \.thumb ?
    .addEventListener \mouseover handle-preview

