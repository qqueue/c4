# hide posts
# TODO refactor stub functionality out of CSS
# can then add things like 'hide similar' 'hide replies' etc

toggle = (prefix, id) ->
  classify $$ ".quotelink[href$=\"##id\"]" .toggle \hiddenlink
  $ "#prefix#id" ?.classList.toggle \hidden

<-! onready

hidden = get \hidden or {threads: {}, posts: {}}

# delete expired posts to keep object small
for type, hash in hidden
  for key, expiry in hash
    delete hash[key] if expiry < Date.now!

listen $ \threads
  .on \click '.reply button.hide' !->
    toggle \p @value
    if @value in hidden.posts
      delete hidden.posts[@value]
    else
      hidden.posts[@value] = Date.now! + 604800000ms # 1 week

  .on \click '.op button.hide' !->
    toggle \t @value
    if @value in hidden.threads
      delete hidden.threads[@value]
    else
      # use Thread hash to always persist sticky threads
      hidden.threads[@value] = if Thread[@value]?sticky
        Number.MAX_VALUE
      else
        Date.now! + 604800000ms # otherwise, a week should be enough

# persist
listen window .on \beforeunload !-> set \hidden hidden

# hide all previously hidden posts and threads
# TODO do this at render time instead of post render for faster display
for post of document.getElementsByClassName \post
  id = post.dataset.id
  toggle \p id if hidden.posts[id]
for thread of document.getElementsByClassName \thread
  id = thread.dataset.id
  toggle \t id if hidden.threads[id]

updater.after_update !->
  for a of $$ ".new .quotelink"
    a.toggle \hiddenlink if a.hash.substring(1) in hidden.posts

