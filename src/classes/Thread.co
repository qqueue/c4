{L} = require \../utils/dom
thread-template = require \templates/thread

module.exports = class Thread
  postprocess: ->
    #convenience array including op
    @posts = [@op, ...@replies]

    @imageReplies = []

    # build reply hash and image replies array
    @reply = {}
    for {no}:reply of @replies
      @imageReplies.push reply if reply.image
      @reply[no] = reply

    if Thread[@no] # if this thread has been parsed before
      @new = []
      @deleted = []
      for {no}:reply of Thread[@no]replies # old replies
        @deleted.push reply unless @reply[no]
      for {no}:reply of @replies
        @new.push reply unless Thread[@no]reply[no]

    Thread[@no] = this

  className: ->
    c = 'thread '
    c += 'sticky ' if @sticky
    c += ' locked' if @locked
    c += ' preview' if @preview
    return c

  render: (container = \article, classes = '', id) ->
    thread-template {container, classes, id, thread: @}

  element: (container, classes, id) ->
    d = L \div
      &innerHTML = @render container, classes, id
    return d.firstElementChild

