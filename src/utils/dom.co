# Everybody loves the DOM

export $ = -> document.getElementById it
export $q = -> document.querySelector it
export $$ = -> document.querySelectorAll it

# get it, 'L'ement?
export L = -> document.createElement it

# html string to DOM
export DOM = -> L \div |>
  &innerHTML = it
  &firstElementChild

Element::matchesSelector ?= Element::mozMatchesSelector

# DOM4 mutation methods
mutation-macro = (nodes) ->
  if nodes.length is 1
    return if typeof nodes.0 is \string
      document.createTextNode nodes.0
    else
      nodes.0

  node = document.createDocumentFragment!

  for n of nodes
    if typeof n is \string
      n = document.createTextNode n
    node.appendChild n

  return node

Node::
  &prepend ?= !->
    @insertBefore do
      mutation-macro @@
      @firstChild

  &append ?= !->
    @appendChild mutation-macro @@

  &before ?= !->
    return unless @parentNode
    @parentNode.insertBefore do
      mutation-macro @@
      this

  &after ?= !->
    return unless @parentNode
    @parentNode.insertBefore do
      mutation-macro @@
      @nextSibling

  &replace ?= !->
    return unless @parentNode
    @parentNode.replaceChild do
      mutation-macro @@
      this

  &remove ?= !->
    return unless @parentNode
    @parentNode.removeChild this

# helper to mass-edit classes
export classify = class
  (@els) ~>

  add:    !-> el.classList.add    it for el of @els
  remove: !-> el.classList.remove it for el of @els
  toggle: !-> el.classList.toggle it for el of @els

export closest = (selector, el) ->
  while el, el.=parentElement
    return el if el.matchesSelector selector

