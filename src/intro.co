"use strict"
log = do ->
  beginning = Date.now!
  log = -> log.messages += "\n[t+#{Date.now! - beginning}] #it"
  log.messages = "[t-0]: html5chan"
  return log

{time, timeEnd} = let times = {}
  time: (name) ->
    times[name] = Date.now()
    log "#{name} [start]"
  timeEnd: (name) ->
    log "#{name} [end: #{Date.now() - times[name]}ms]"

# sets up global variables
# so that the parts of the script can
# access each other since this file
# is compiled without the IEFE wrapper
parser = {}
board = {}
updater = {}
titler = {}

# because we want to be able to stop all on DOMContentLoaded
# handlers with return, we implement a custom callback queue
onready = -> onready.handlers.push it
onready.handlers = []
onready.execute = !(thread, threads) ->
  fn thread, threads for fn of onready.handlers

# the classes (Post, Thread, Image) are also
# in the top level, for global access

# with ff-specific beforescriptexecute:
# https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/beforescriptexecute
# prevent native 4chan JS from loading and throwing errors
# TODO there's got to be a way to do this in chrome, even if only in real
# extension land TODO opera (if this even works there, has the same 'magic'
# events)
do ->
  prevent = (e) ->
    e.preventDefault! if /static.4chan.org/.test e.target.src
  document.addEventListener \beforescriptexecute prevent
  document.addEventListener \DOMContentLoaded ->
    document.removeEventListener \beforescriptexecute prevent
