<-! document.addEventListener \DOMContentLoaded

# force https: protocol, so ajax posting will work
#if window.location.protocol is \http:
	# window.location has its own 'replace' method which is weird
#	window.location.= toString!.replace /^http/ 'https'

board.name = window.location.pathname.split \/ .1

board.archive = switch board.name
	case <[a jp m tg u tv v vg]> # foolz
		"http://archive.foolz.us/#that/thread"
	case \lit
		"http://fuuka.warosu.org/#that/thread"
	case <[diy g sci]>
		"http://archive.installgentoo.net/#that/thread"
	case <[3 adv an ck co fa fit int k mu n o p po pol r9k soc sp toy trv vp x]>
		"http://archive.no-ip.org/#that/thread"

# used in enhancer
board.archivelink = if board.archive
	"""$1<a href="#{board.archive}/$2" class="archivelink">&gt;&gt;$2</a>"""
else \$& # don't replace

# archive redirection
if /404/.test document.title and board.archive
	if /\d+/.exec window.location.pathname
		window.location = "#{board.archive}/#{that.0}"
	return

# get other useful information
with board
	logoEl = document.getElementsByClassName \logo .0
	centerEls = document.getElementsByTagName \center

	@title = logoEl.children.2.children.0.children.0.textContent
	@subtitle = logoEl.children.4?innerHTML or ''

	# detect based on the blue theme
	@sfw = /yotsublue/.test document.styleSheets.0.href
	@nav = document.getElementById \navtop .innerHTML # I could hard code it, but then I'd miss updates
	@banner = document.getElementsByTagName \img .0.src
	
	# the captcha, 2 ads, and footer tag are also in center tags
	@motd = centerEls.2.innerHTML if centerEls.length > 4
	@url = "//boards.4chan.org/#{@name}/"
	@threadurl = "#{@url}res/"
	
	if document.location.pathname.match /res\/(\d+)/
		@isThread = true
		@threadId = that.1
		@threadPath = "/#{@name}/res/#{@threadId}"
	else
		@isThread = false
		@page = parseInt document.location.pathname.split('/')?2, 10 or 0
		@pages = for i to 15 # let's assume they all have 15 pages
			num: i, current: i is @page
		@next = if @current < 15 then @current + 1
		@previous = if @current > 0 then @current - 1
	@isBoard = !@isThread
	@locked = document.forms.length is 1 # delform, without postform

	# delete password
	@password = get \password or Math.random!.toString!.substr -8

time "parse"
data = parser.yotsuba document
timeEnd "parse"

time "render"
# replace documentElement with new document element
# to avoid multiple reflows of removing old styles, adding new content, etc
# not using my DOM creation helper because it's slower, and speed is of the
# essence here (also no $ shortcut)
do ->
	html = document.createElement \html

	head = document.createElement \head
	style = document.createElement \style
	style.id = \html5chan-style
	style.textContent =
		'''
		%hakase.css%
		'''
	head.appendChild style
	title = document.createElement \title
	title.textContent = board.title
	head.appendChild title
	html.appendChild head

	body = document.createElement \body
	body.id = board.name
	body.classList.add if board.sfw then \sfw else \nsfw
	body.classList.add if board.isThread then \threadpage else \boardpage
	time "parse innerHTML"
	body.innerHTML = 
		"""
		%board.co.html%
		"""
	timeEnd "parse innerHTML"
	#highlight current page
	if board.isBoard
		body.querySelector "\#pages a[href=\"#{board.page or board.url}\"]" .id = \current

	html.appendChild body

	# replace documentElement
	time "replace documentElement"
	document.replaceChild html, document.documentElement
	timeEnd "replace documentElement"

# create recaptcha with script already included on page (using 4chan's public key)
# had to pick apart recaptcha's internal api to get it to work without theming
recaptcha = document.createElement \script
recaptcha.textContent = "
(function() {
	var that;
	if( that = document.getElementById('captcha') ) {
		Recaptcha._init_options({
			theme: 'custom',
			custom_theme_widget: that
		});
		Recaptcha.theme = 'custom';
		Recaptcha.widget = that;
		Recaptcha._finish_widget();
	}
})();"
document.head.appendChild recaptcha

# disable 4chan's onload functions
# we can do this because onload has to wait
# for all the images, which obstensibly takes longer
# than it does to load this script
window.onload = window.onunload = void

# rescroll to target element if this page hasn't been scrolled before
# this retains the browser's natural scroll position memory
# while still scrolling to the new hash target's position 
# the first time the page loads (or if window hasn't been scrolled
if window.location.hash and not sget document.URL 
	window.location.hash = window.location.hash
	window.addEventListener \scroll function registerPage
		sset (document.URL): true
		window.removeEventListener \scroll registerPage


timeEnd "render"

# run other onready handlers
onready.execute data

# enable all features
# FIXME not really using the feature hash, so remove this
for key, feature in features
	feature.on! unless key is \postpreview
