<-! document.addEventListener \DOMContentLoaded

time "render"

board.name = window.location.pathname.split \/ .1

board.archive = switch board.name
  case <[a jp m tg u tv v vg]> # foolz
    "http://archive.foolz.us/#that/thread"
  case \lit
    "http://fuuka.warosu.org/#that/thread"
  case <[diy g sci]>
    "http://archive.installgentoo.net/#that/thread"
  case <[3 adv an ck co fa fit int k mu n o p po pol r9k soc sp toy trv vp x]>
    "http://archive.no-ip.org/#that/thread"

# used in enhancer
board.archivelink = if board.archive
  """$1<a href="#{board.archive}/$2" class="archivelink">&gt;&gt;$2</a>"""
else \$& # don't replace

# archive redirection
if /404/.test document.title and board.archive
  if /\d+/.exec window.location.pathname
    window.location = "#{board.archive}/#{that.0}"
  return

# get other useful information
board
  &title = document.querySelector \.boardTitle .textContent
  &subtitle = document.querySelector \.boardSubtitle ?.innerHTML or ''

  # detect based on the blue theme
  &sfw = /yotsublue/.test document.styleSheets.0.href
  &favicon = if &sfw then titler.favicon.sfw else titler.favicon.nsfw

  &nav = document.getElementById \boardNavDesktop .innerHTML
  &banner = document.getElementsByTagName \img .0.src

  # the captcha, 2 ads, and footer tag are also in center tags
  &motd = document.querySelector(\.globalMessage)?innerHTML
  &url = "//boards.4chan.org/#{&name}/"
  &threadurl = "#{&url}res/"

  if &isThread = document.location.pathname.match /res\/(\d+)/
    &threadId = that.1
    &threadPath = "/#{&name}/res/#{&threadId}"
  else
    &isThread = false
    &page = parseInt (document.location.pathname / '/')?2, 10 or 0
    &pages = for i to 15 # let's assume they all have 15 pages
      num: i, current: i is &page
    &next = if &current < 15 then &current + 1
    &previous = if &current > 0 then &current - 1
  &isBoard = !&isThread
  &locked = document.forms.length is 1 # delform, without postform

  # delete password
  &password = get \password or Math.random!toString!substr -8

if board.isThread then
  thread = parser.thread document
  threads = [thread] # for rendering conformity
else
  threads = parser.board document

console.log threads

# replace documentElement with new document element
# to avoid multiple reflows of removing old styles, adding new content, etc
# not using my DOM creation helper because it's slower, and speed is of the
# essence here (also no $ shortcut)
time "create elements"

html = document.createElement \html

head = document.createElement \head
style = document.createElement \style
  &id = \html5chan-style
  &textContent =
    '''
    %hakase.css%
    '''
head.appendChild style

title = document.createElement \title
  &textContent = board.title
head.appendChild title
html.appendChild head

body = document.createElement \body
  &id = board.name
  &className = "#{if board.sfw then \sfw else \nsfw} \
               #{if board.isThread then \threadpage else \boardpage}"

time "parse innerHTML"
body.innerHTML =
  """
  %board.co.html%
  """
timeEnd "parse innerHTML"

#highlight current page
if board.isBoard
  body.querySelector "\#pages a[href=\"#{board.page or board.url}\"]"
    .id = \current

html.appendChild body

timeEnd "create elements"

time "replace documentElement"
document.replaceChild html, document.documentElement
timeEnd "replace documentElement"

# disable 4chan's onload functions
window.onload = window.onunload = void

# rescroll to target element if this page hasn't been scrolled before
# this retains the browser's natural scroll position memory
# while still scrolling to the new hash target's position
# the first time the page loads (or if window hasn't been scrolled
if window.location.hash and not sget document.URL
  window.location.hash = window.location.hash
  window.addEventListener \scroll function registerPage
    sset {+(document.URL)}
    window.removeEventListener \scroll registerPage

# fix captcha
if board.isThread and not thread.locked
  setTimeout do
    # secret secrets, gained from digging around in the recaptcha js
    "Recaptcha._init_options({
       theme: 'custom',
       custom_theme_widget: document.getElementById('captcha')
     });
     Recaptcha.theme = 'custom';
     Recaptcha.widget = document.getElementById('captcha');
     Recaptcha._finish_widget();"
    0

timeEnd "render"

# run other onready handlers
onready.execute thread, threads

